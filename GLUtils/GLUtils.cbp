<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="GLUtils" />
		<Option platforms="Unix;" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option platforms="Unix;" />
				<Option output="$(WORKSPACE_DIR)/lib/Debug/_GLUtils" prefix_auto="0" extension_auto="1" />
				<Option object_output="obj/Debug" />
				<Option external_deps="$(WORKSPACE_DIR)/lib/Debug/_Utils.so;$(WORKSPACE_DIR)/lib/Debug/_MathLib.so;" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-std=c++11" />
					<Add option="-fPIC" />
					<Add option="-m64" />
					<Add option="-g" />
					<Add option="-W" />
					<Add option="-O0" />
					<Add option="-fpermissive" />
					<Add option="-D_DEBUG" />
					<Add option="-D_USRDLL" />
					<Add option="-DGLUTILS_EXPORTS" />
					<Add option="-D_CRT_SECURE_NO_WARNINGS" />
					<Add directory="/usr/include/python2.7" />
					<Add directory="$(WORKSPACE_DIR)" />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(WORKSPACE_DIR)" />
				</ResourceCompiler>
				<Linker>
					<Add option="-m64" />
					<Add library="python2.7" />
					<Add library="_Utils" />
					<Add library="_MathLib" />
					<Add library="GL" />
					<Add library="GLU" />
					<Add library="GLEW" />
					<Add library="glut" />
					<Add directory="$(WORKSPACE_DIR)/lib/Debug" />
					<Add directory="/usr/lib/x86_64-linux-gnu" />
				</Linker>
				<ExtraCommands>
					<Add before="echo Compiling Python interface" />
					<Add before="echo off" />
					<Add before="/usr/bin/swig -c++ -python -o $(PROJECT_NAME)_wrap.cpp -oh $(PROJECT_NAME)_wrap.h $(PROJECT_NAME).swg" />
					<Add after="echo Creating python library" />
					<Add after="mv $(PROJECT_DIR)$(PROJECT_NAME).py $(WORKSPACE_DIR)/lib/Debug/$(PROJECT_NAME).py" />
					<Add after="if [ ! -e  $(WORKSPACE_DIR)/lib/Debug/lib_$(PROJECT_NAME).so ]; then ln -s $(WORKSPACE_DIR)/lib/Debug/_$(PROJECT_NAME).so $(WORKSPACE_DIR)/lib/Debug/lib_$(PROJECT_NAME).so; fi" />
				</ExtraCommands>
			</Target>
			<Target title="Release">
				<Option platforms="Unix;" />
				<Option output="$(WORKSPACE_DIR)/lib/Release/_GLUtils" prefix_auto="0" extension_auto="1" />
				<Option object_output="obj/Release" />
				<Option external_deps="$(WORKSPACE_DIR)/lib/Release/_Utils.so;$(WORKSPACE_DIR)/lib/Release/_MathLib.so;" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
					<Add option="-std=c++11" />
					<Add option="-fPIC" />
					<Add option="-m64" />
					<Add option="-W" />
					<Add option="-fpermissive" />
					<Add option="-DNDEBUG" />
					<Add option="-D_USRDLL" />
					<Add option="-DGLUTILS_EXPORTS" />
					<Add option="-D_CRT_SECURE_NO_WARNINGS" />
					<Add directory="/usr/include/python2.7" />
					<Add directory="$(WORKSPACE_DIR)" />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(WORKSPACE_DIR)" />
				</ResourceCompiler>
				<Linker>
					<Add option="-m64" />
					<Add library="python2.7" />
					<Add library="_Utils" />
					<Add library="_MathLib" />
					<Add library="GL" />
					<Add library="GLU" />
					<Add library="GLEW" />
					<Add library="glut" />
					<Add directory="$(WORKSPACE_DIR)/lib/Release" />
					<Add directory="/usr/lib/x86_64-linux-gnu" />
				</Linker>
				<ExtraCommands>
					<Add before="echo Compiling Python interface" />
					<Add before="echo off" />
					<Add before="/usr/bin/swig -c++ -python -o $(PROJECT_NAME)_wrap.cpp -oh $(PROJECT_NAME)_wrap.h $(PROJECT_NAME).swg" />
					<Add after="echo Creating python library" />
					<Add after="mv $(PROJECT_DIR)$(PROJECT_NAME).py ${WORKSPACE_DIR)/lib/Release/$(PROJECT_NAME).py" />
					<Add after="if [ ! -e  $(WORKSPACE_DIR)/lib/Release/lib_$(PROJECT_NAME).so ]; then ln -s $(WORKSPACE_DIR)/lib/Release/_$(PROJECT_NAME).so $(WORKSPACE_DIR)/lib/Release/lib_$(PROJECT_NAME).so; fi" />
				</ExtraCommands>
			</Target>
			<Target title="Debug3">
				<Option platforms="Unix;" />
				<Option output="$(WORKSPACE_DIR)/lib/Debug3/_GLUtils" prefix_auto="0" extension_auto="1" />
				<Option object_output="obj/Debug3" />
				<Option external_deps="$(WORKSPACE_DIR)/lib/Debug3/_Utils.so;$(WORKSPACE_DIR)/lib/Debug3/_MathLib.so;" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-std=c++11" />
					<Add option="-fPIC" />
					<Add option="-m64" />
					<Add option="-g" />
					<Add option="-W" />
					<Add option="-O0" />
					<Add option="-fpermissive" />
					<Add option="-D_DEBUG" />
					<Add option="-D_USRDLL" />
					<Add option="-DGLUTILS_EXPORTS" />
					<Add option="-D_CRT_SECURE_NO_WARNINGS" />
					<Add directory="/usr/include/python3.6m" />
					<Add directory="$(WORKSPACE_DIR)" />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(WORKSPACE_DIR)" />
				</ResourceCompiler>
				<Linker>
					<Add option="-m64" />
					<Add library="python3.6m" />
					<Add library="_Utils" />
					<Add library="_MathLib" />
					<Add library="GL" />
					<Add library="GLU" />
					<Add library="GLEW" />
					<Add library="glut" />
					<Add directory="$(WORKSPACE_DIR)/lib/Debug3" />
					<Add directory="/usr/lib/x86_64-linux-gnu" />
				</Linker>
				<ExtraCommands>
					<Add before="echo Compiling Python interface" />
					<Add before="echo off" />
					<Add before="/usr/bin/swig -c++ -python -py3 -o $(PROJECT_NAME)_wrap.cpp -oh $(PROJECT_NAME)_wrap.h $(PROJECT_NAME).swg" />
					<Add after="echo Creating python library" />
					<Add after="mv $(PROJECT_DIR)$(PROJECT_NAME).py $(WORKSPACE_DIR)/lib/Debug3/$(PROJECT_NAME).py" />
					<Add after="if [ ! -e  $(WORKSPACE_DIR)/lib/Debug3/lib_$(PROJECT_NAME).so ]; then ln -s $(WORKSPACE_DIR)/lib/Debug3/_$(PROJECT_NAME).so $(WORKSPACE_DIR)/lib/Debug3/lib_$(PROJECT_NAME).so; fi" />
				</ExtraCommands>
			</Target>
			<Target title="Release3">
				<Option platforms="Unix;" />
				<Option output="$(WORKSPACE_DIR)/lib/Release3/_GLUtils" prefix_auto="0" extension_auto="1" />
				<Option object_output="obj/Release3" />
				<Option external_deps="$(WORKSPACE_DIR)/lib/Release3/_Utils.so;$(WORKSPACE_DIR)/lib/Release3/_MathLib.so;" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
					<Add option="-std=c++11" />
					<Add option="-fPIC" />
					<Add option="-m64" />
					<Add option="-W" />
					<Add option="-fpermissive" />
					<Add option="-DNDEBUG" />
					<Add option="-D_USRDLL" />
					<Add option="-DGLUTILS_EXPORTS" />
					<Add option="-D_CRT_SECURE_NO_WARNINGS" />
					<Add directory="/usr/include/python3.6m" />
					<Add directory="$(WORKSPACE_DIR)" />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(WORKSPACE_DIR)" />
				</ResourceCompiler>
				<Linker>
					<Add option="-m64" />
					<Add library="python3.6m" />
					<Add library="_Utils" />
					<Add library="_MathLib" />
					<Add library="GL" />
					<Add library="GLU" />
					<Add library="GLEW" />
					<Add library="glut" />
					<Add directory="$(WORKSPACE_DIR)/lib/Release3" />
					<Add directory="/usr/lib/x86_64-linux-gnu" />
				</Linker>
				<ExtraCommands>
					<Add before="echo Compiling Python interface" />
					<Add before="echo off" />
					<Add before="/usr/bin/swig -c++ -python -py3 -o $(PROJECT_NAME)_wrap.cpp -oh $(PROJECT_NAME)_wrap.h $(PROJECT_NAME).swg" />
					<Add after="echo Creating python library" />
					<Add after="mv $(PROJECT_DIR)$(PROJECT_NAME).py ${WORKSPACE_DIR)/lib/Release3/$(PROJECT_NAME).py" />
					<Add after="if [ ! -e  $(WORKSPACE_DIR)/lib/Release3/lib_$(PROJECT_NAME).so ]; then ln -s $(WORKSPACE_DIR)/lib/Release3/_$(PROJECT_NAME).so $(WORKSPACE_DIR)/lib/Release3/lib_$(PROJECT_NAME).so; fi" />
				</ExtraCommands>
			</Target>
		</Build>
		<Unit filename="../Include/GLheaders.h" />
		<Unit filename="CubeBg.cpp" />
		<Unit filename="CubeBg.h" />
		<Unit filename="GLCamera.cpp" />
		<Unit filename="GLCamera.h" />
		<Unit filename="GLFPSCamera.cpp" />
		<Unit filename="GLFPSCamera.h" />
		<Unit filename="GLMesh.cpp" />
		<Unit filename="GLMesh.h" />
		<Unit filename="GLShader.cpp" />
		<Unit filename="GLShader.h" />
		<Unit filename="GLTexture.cpp" />
		<Unit filename="GLTexture.h" />
		<Unit filename="GLTrackingCamera.cpp" />
		<Unit filename="GLTrackingCamera.h" />
		<Unit filename="GLUI.h" />
		<Unit filename="GLUICallback.h" />
		<Unit filename="GLUICheckBox.cpp" />
		<Unit filename="GLUICheckBox.h" />
		<Unit filename="GLUIContainer.h" />
		<Unit filename="GLUICurveEditor.cpp" />
		<Unit filename="GLUICurveEditor.h" />
		<Unit filename="GLUISizer.h" />
		<Unit filename="GLUITopLevelWindow.h" />
		<Unit filename="GLUIWindow.cpp" />
		<Unit filename="GLUIWindow.h" />
		<Unit filename="GLUtils.cpp" />
		<Unit filename="GLUtils.h" />
		<Unit filename="GLUtils.swg" />
		<Unit filename="GLUtilsDll.h" />
		<Unit filename="GLUtils_wrap.cpp" />
		<Unit filename="OBJReader.cpp" />
		<Unit filename="OBJReader.h" />
		<Extensions>
			<code_completion />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
