<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="Utils" />
		<Option platforms="Unix;" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option platforms="Unix;" />
				<Option output="$(WORKSPACE_DIR)/lib/Debug/_Utils" prefix_auto="0" extension_auto="1" />
				<Option object_output="obj/Debug" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-std=c++11" />
					<Add option="-std=c11" />
					<Add option="-fPIC" />
					<Add option="-m64" />
					<Add option="-g" />
					<Add option="-O0" />
					<Add option="-W" />
					<Add option="-fpermissive" />
					<Add option="-Wno-error=cast-function-type" />
					<Add option="-D_DEBUG" />
					<Add option="-DUTILS_EXPORTS" />
					<Add option="-D_CRT_SECURE_NO_WARNINGS" />
					<Add directory="/usr/include/python2.7" />
					<Add directory="$(PROJECT_DIR)/.." />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(PROJECT_DIR)/.." />
				</ResourceCompiler>
				<Linker>
					<Add option="-m64" />
					<Add library="python2.7" />
					<Add directory="/usr/lib/x86_64-linux-gnu" />
				</Linker>
				<ExtraCommands>
					<Add before="echo Compiling Python interface" />
					<Add before="echo off" />
					<Add before="/usr/bin/swig -c++ -python  -o $(PROJECT_NAME)_wrap.cpp -oh ${PROJECT_NAME)_wrap.h $(PROJECT_NAME).swg" />
					<Add after="echo Creating python library" />
					<Add after="mv $(PROJECT_DIR)/$(PROJECT_NAME).py $(WORKSPACE_DIR)/lib/Debug/$(PROJECT_NAME).py" />
					<Add after="if [ ! -e  $(WORKSPACE_DIR)/lib/Debug/lib_$(PROJECT_NAME).so ]; then ln -s $(WORKSPACE_DIR)/lib/Debug/_$(PROJECT_NAME).so $(WORKSPACE_DIR)/lib/Debug/lib_$(PROJECT_NAME).so; fi" />
				</ExtraCommands>
			</Target>
			<Target title="Release">
				<Option platforms="Unix;" />
				<Option output="$(WORKSPACE_DIR)/lib/Release/_Utils" prefix_auto="0" extension_auto="1" />
				<Option object_output="obj/Release" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
					<Add option="-std=c++11" />
					<Add option="-fPIC" />
					<Add option="-m64" />
					<Add option="-W" />
					<Add option="-fpermissive" />
					<Add option="-Wno-error=cast-function-type" />
					<Add option="-DNDEBUG" />
					<Add option="-DUTILS_EXPORTS" />
					<Add option="-D_CRT_SECURE_NO_WARNINGS" />
					<Add directory="/usr/include/python2.7" />
					<Add directory="$(PROJECT_DIR)/.." />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(PROJECT_DIR)/.." />
				</ResourceCompiler>
				<Linker>
					<Add option="-m64" />
					<Add library="python2.7" />
					<Add directory="/usr/lib/x86_64-linux-gnu" />
				</Linker>
				<ExtraCommands>
					<Add before="echo Compiling Python interface" />
					<Add before="echo off" />
					<Add before="/usr/bin/swig -python -c++ -o $(PROJECT_NAME)_wrap.cpp -oh $(PROJECT_NAME)_wrap.h $(PROJECT_NAME).swg" />
					<Add after="echo Creating python library" />
					<Add after="mv $(PROJECT_DIR)/$(PROJECT_NAME).py $(WORKSPACE_DIR)/lib/Release/$(PROJECT_NAME).py" />
					<Add after="if [ ! -e  $(WORKSPACE_DIR)/lib/Release/lib_$(PROJECT_NAME).so ]; then ln -s $(WORKSPACE_DIR)/lib/Release/_$(PROJECT_NAME).so $(WORKSPACE_DIR)/lib/Release/lib_$(PROJECT_NAME).so; fi" />
				</ExtraCommands>
			</Target>
		</Build>
		<Compiler>
			<Add option="-std=c++11" />
			<Add option="-fPIC" />
			<Add option="-m64" />
		</Compiler>
		<Linker>
			<Add option="-m64" />
		</Linker>
		<Unit filename="../Python/UtilsTest.py" />
		<Unit filename="BMPIO.cpp" />
		<Unit filename="BMPIO.h" />
		<Unit filename="GradientDescentOptimizer.cpp" />
		<Unit filename="GradientDescentOptimizer.h" />
		<Unit filename="Image.cpp" />
		<Unit filename="Image.h" />
		<Unit filename="ImageIO.cpp" />
		<Unit filename="ImageIO.h" />
		<Unit filename="Observable.h" />
		<Unit filename="Observer.h" />
		<Unit filename="RegisterPrintFunction.h" />
		<Unit filename="TypeName.cpp" />
		<Unit filename="TypeName.h" />
		<Unit filename="Utils.cpp" />
		<Unit filename="Utils.h" />
		<Unit filename="Utils.swg" />
		<Unit filename="UtilsDll.h" />
		<Unit filename="UtilsTemplates.h" />
		<Unit filename="Utils_wrap.cpp" />
		<Extensions>
			<code_completion />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
